<Type Name="NegotiateAuthentication" FullName="System.Net.Security.NegotiateAuthentication">
  <TypeSignature Language="C#" Value="public sealed class NegotiateAuthentication : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NegotiateAuthentication extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateAuthentication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NegotiateAuthentication&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type NegotiateAuthentication = class&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateAuthentication sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateAuthentication (System.Net.Security.NegotiateAuthenticationClientOptions clientOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Security.NegotiateAuthenticationClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateAuthentication.#ctor(System.Net.Security.NegotiateAuthenticationClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientOptions As NegotiateAuthenticationClientOptions)" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateAuthentication : System.Net.Security.NegotiateAuthenticationClientOptions -&gt; System.Net.Security.NegotiateAuthentication" Usage="new System.Net.Security.NegotiateAuthentication clientOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateAuthentication(System::Net::Security::NegotiateAuthenticationClientOptions ^ clientOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientOptions" Type="System.Net.Security.NegotiateAuthenticationClientOptions" />
      </Parameters>
      <Docs>
        <param name="clientOptions">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateAuthentication (System.Net.Security.NegotiateAuthenticationServerOptions serverOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Security.NegotiateAuthenticationServerOptions serverOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateAuthentication.#ctor(System.Net.Security.NegotiateAuthenticationServerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serverOptions As NegotiateAuthenticationServerOptions)" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateAuthentication : System.Net.Security.NegotiateAuthenticationServerOptions -&gt; System.Net.Security.NegotiateAuthentication" Usage="new System.Net.Security.NegotiateAuthentication serverOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateAuthentication(System::Net::Security::NegotiateAuthenticationServerOptions ^ serverOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serverOptions" Type="System.Net.Security.NegotiateAuthenticationServerOptions" />
      </Parameters>
      <Docs>
        <param name="serverOptions">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateAuthentication.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="negotiateAuthentication.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutgoingBlob">
      <MemberSignature Language="C#" Value="public byte[]? GetOutgoingBlob (ReadOnlySpan&lt;byte&gt; incomingBlob, out System.Net.Security.NegotiateAuthenticationStatusCode statusCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetOutgoingBlob(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; incomingBlob, [out] valuetype System.Net.Security.NegotiateAuthenticationStatusCode&amp; statusCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateAuthentication.GetOutgoingBlob(System.ReadOnlySpan{System.Byte},System.Net.Security.NegotiateAuthenticationStatusCode@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutgoingBlob (incomingBlob As ReadOnlySpan(Of Byte), ByRef statusCode As NegotiateAuthenticationStatusCode) As Byte()" />
      <MemberSignature Language="F#" Value="member this.GetOutgoingBlob : ReadOnlySpan&lt;byte&gt; * NegotiateAuthenticationStatusCode -&gt; byte[]" Usage="negotiateAuthentication.GetOutgoingBlob (incomingBlob, statusCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetOutgoingBlob(ReadOnlySpan&lt;System::Byte&gt; incomingBlob, [Runtime::InteropServices::Out] System::Net::Security::NegotiateAuthenticationStatusCode % statusCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingBlob" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="statusCode" Type="System.Net.Security.NegotiateAuthenticationStatusCode" RefType="out" />
      </Parameters>
      <Docs>
        <param name="incomingBlob">To be added.</param>
        <param name="statusCode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutgoingBlob">
      <MemberSignature Language="C#" Value="public string? GetOutgoingBlob (string? incomingBlob, out System.Net.Security.NegotiateAuthenticationStatusCode statusCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetOutgoingBlob(string incomingBlob, [out] valuetype System.Net.Security.NegotiateAuthenticationStatusCode&amp; statusCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateAuthentication.GetOutgoingBlob(System.String,System.Net.Security.NegotiateAuthenticationStatusCode@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutgoingBlob (incomingBlob As String, ByRef statusCode As NegotiateAuthenticationStatusCode) As String" />
      <MemberSignature Language="F#" Value="member this.GetOutgoingBlob : string * NegotiateAuthenticationStatusCode -&gt; string" Usage="negotiateAuthentication.GetOutgoingBlob (incomingBlob, statusCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetOutgoingBlob(System::String ^ incomingBlob, [Runtime::InteropServices::Out] System::Net::Security::NegotiateAuthenticationStatusCode % statusCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingBlob" Type="System.String" />
        <Parameter Name="statusCode" Type="System.Net.Security.NegotiateAuthenticationStatusCode" RefType="out" />
      </Parameters>
      <Docs>
        <param name="incomingBlob">To be added.</param>
        <param name="statusCode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateAuthentication.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.NegotiateAuthentication.IsAuthenticated" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateAuthentication.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.NegotiateAuthentication.IsEncrypted" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEncrypted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateAuthentication.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.NegotiateAuthentication.IsMutuallyAuthenticated" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateAuthentication.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.NegotiateAuthentication.IsServer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsServer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateAuthentication.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.NegotiateAuthentication.IsSigned" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public string Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Package" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateAuthentication.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As String" />
      <MemberSignature Language="F#" Value="member this.Package : string" Usage="System.Net.Security.NegotiateAuthentication.Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Package { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateAuthentication.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel" Usage="System.Net.Security.NegotiateAuthentication.ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateAuthentication.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="F#" Value="member this.RemoteIdentity : System.Security.Principal.IIdentity" Usage="System.Net.Security.NegotiateAuthentication.RemoteIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="public string? TargetName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateAuthentication.TargetName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetName As String" />
      <MemberSignature Language="F#" Value="member this.TargetName : string" Usage="System.Net.Security.NegotiateAuthentication.TargetName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
